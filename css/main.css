/*! tailwindcss v2.1.2 | MIT License | https://tailwindcss.com */

/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a better box model (opinionated).
*/

*,
::before,
::after {
  box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

html {
  -moz-tab-size: 4;
  -o-tab-size: 4;
     tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

body {
  margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

body {
  font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
}

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr[title] {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family:
		ui-monospace,
		SFMono-Regular,
		Consolas,
		'Liberation Mono',
		Menlo,
		monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
}

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

button,
select { /* 1 */
  text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

button,
[type='button'],
[type='submit'] {
  -webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/

/**
Restore the focus styles unset by the previous rule.
*/

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

legend {
  padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

button {
  background-color: transparent;
  background-image: none;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

fieldset {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 1 */
  line-height: 1.5; /* 2 */
}

/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */

body {
  font-family: inherit;
  line-height: inherit;
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

hr {
  border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img {
  border-style: solid;
}

textarea {
  resize: vertical;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  color: #9ca3af;
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  color: #9ca3af;
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}

button {
  cursor: pointer;
}

table {
  border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

/**
 * Make replaced elements `display: block` by default as that's
 * the behavior you want almost all of the time. Inspired by
 * CSS Remedy, with `svg` added as well.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  vertical-align: middle;
}

/**
 * Constrain images and videos to the parent width and preserve
 * their intrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
video {
  max-width: 100%;
  height: auto;
}

@media (min-width: 768px) {
  .navbar, .navbar-menu, .navbar-end {
    display: flex;
    align-items: stretch;
  }
}

.navbar {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
  --tw-border-opacity: 1;
  border-color: rgba(243, 244, 246, var(--tw-border-opacity));
  border-bottom-width: 1px;
  display: flex;
  height: 3.5rem;
  position: fixed;
  top: 0px;
  right: 0px;
  left: 0px;
  width: 100vw;
  z-index: 30;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

@media (min-width: 768px) {
  .navbar {
    padding-left: 15rem;
    width: auto;
  }
}

.navbar-brand {
  display: flex;
  align-items: stretch;
  flex: 1 1 0%;
  height: 3.5rem;
}

.navbar-brand.is-right {
  flex: none;
}

@media (min-width: 768px) {
  .navbar-brand.is-right {
    display: none;
  }
}

.navbar-brand .navbar-item {
  display: flex;
  align-items: center;
}

.navbar-item, .navbar-link {
  display: block;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.navbar-item {
  flex-grow: 0;
  flex-shrink: 0;
  position: relative;
}

@media (min-width: 768px) {
  .navbar-item {
    display: flex;
    align-items: center;
  }
}

@media (min-width: 768px) {
  .navbar-item.mobile-aside-button {
    display: none;
  }
}

@media (min-width: 768px) {
  .navbar-item.has-divider {
    --tw-border-opacity: 1;
    border-color: rgba(243, 244, 246, var(--tw-border-opacity));
    border-right-width: 1px;
  }
}

.navbar-item > .navbar-link {
  --tw-bg-opacity: 1;
  background-color: rgba(243, 244, 246, var(--tw-bg-opacity));
}

@media (min-width: 768px) {
  .navbar-item > .navbar-link {
    background-color: transparent;
  }
}

.navbar-item .icon + span {
  margin-left: 0.5rem;
}

.navbar-item.has-user-avatar > .navbar-link {
  display: flex;
  align-items: center;
}

.navbar-item.has-user-avatar .is-user-avatar {
  display: inline-flex;
  height: 1.5rem;
  margin-right: 0.75rem;
  width: 1.5rem;
}

.navbar-item.has-dropdown {
  padding: 0px;
}

@media (min-width: 768px) {
  .navbar-item.has-dropdown {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    padding-left: 0.75rem;
    padding-right: 0.75rem;
  }
}

@media (min-width: 768px) {
  .navbar-item.desktop-icon-only {
    justify-content: center;
    width: 4rem;
  }
}

@media (min-width: 768px) {
  .navbar-item.desktop-icon-only span:last-child {
    display: none;
  }
}

.navbar-item .input {
  border-width: 0px;
}

.navbar-menu {
  max-height: calc(100vh - 3.5rem);
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
  --tw-border-opacity: 1;
  border-color: rgba(243, 244, 246, var(--tw-border-opacity));
  border-bottom-width: 1px;
  display: none;
  overflow: auto;
  position: absolute;
  left: 0px;
  top: 3.5rem;
  --tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  width: 100vw;
}

@media (min-width: 768px) {
  .navbar-menu {
    border-bottom-width: 0px;
    display: flex;
    flex-grow: 1;
    overflow: visible;
    position: static;
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
}

.navbar-menu.active {
  display: block;
}

@media (min-width: 768px) {
  .navbar-end {
    justify-content: flex-end;
    margin-left: auto;
  }
}

.navbar-item .navbar-dropdown {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

@media (min-width: 768px) {
  .navbar-item .navbar-dropdown {
    --tw-bg-opacity: 1;
    background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
    --tw-border-opacity: 1;
    border-color: rgba(229, 231, 235, var(--tw-border-opacity));
    border-bottom-right-radius: 0.25rem;
    border-bottom-left-radius: 0.25rem;
    border-top-width: 2px;
    min-width: 100%;
    position: absolute;
    left: 0px;
    top: 100%;
    --tw-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    z-index: 20;
  }
}

@media (min-width: 768px) {
  .navbar-item:not(.active) .navbar-dropdown {
    display: none;
  }
}

.field:not(:last-child, .mb-0) {
  margin-bottom: 0.75rem;
}

.field:not(:last-child,.field-body .field .field) {
  margin-bottom: 0.75rem;
}

.field-body .field .field {
  margin-bottom: 0px;
}

.field.addons {
  display: flex;
  justify-content: flex-start;
}

.field.addons .control.expanded {
  flex-grow: 1;
  flex-shrink: 1;
}

.field.addons .control:first-child:not(:only-child) .input, .field.addons .control:first-child:not(:only-child) .select select {
  border-top-right-radius: 0px;
  border-bottom-right-radius: 0px;
  border-right-width: 0px;
}

.field.addons .control:last-child:not(:only-child) .input, .field.addons .control:last-child:not(:only-child) .select select {
  border-top-left-radius: 0px;
  border-bottom-left-radius: 0px;
  border-left-width: 0px;
}

.field.grouped {
  display: flex;
  justify-content: flex-start;
}

.field.grouped > .control:not(:last-child) {
  margin-right: 0.75rem;
}

.field.grouped.multiline {
  flex-wrap: wrap;
}

/*.field.horizontal {
    @apply md:flex;
  }

  .field.horizontal .field-label {
    @apply md:flex-grow md:flex-shrink-0 md:mr-6 md:text-right;
  }

  .field.horizontal .field-body {
    @apply md:flex flex-shrink flex-grow-5;
  }*/

.label {
  display: block;
  font-weight: 700;
  margin-bottom: 0.5rem;
}

.control {
  position: relative;
}

.control.icons-left, .control.icons-right {
  position: relative;
}

.input, .textarea, .select select {
  --tw-border-opacity: 1;
  border-color: rgba(156, 163, 175, var(--tw-border-opacity));
  border-radius: 0.25rem;
  border-width: 1px;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.input, .select select {
  height: 2.5rem;
}

.input:focus, .textarea:focus, .select select:focus {
  --tw-border-opacity: 1;
  border-color: rgba(243, 244, 246, var(--tw-border-opacity));
}

.input, .textarea, .select select {
  max-width: 100%;
}

.input:focus, .textarea:focus, .select select:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.input, .textarea, .select select {
  width: 100%;
}

.input[readonly] {
  --tw-bg-opacity: 1;
  background-color: rgba(243, 244, 246, var(--tw-bg-opacity));
  pointer-events: none;
}

.textarea {
  height: 6rem;
}

.control.icons-left .icon, .control.icons-right .icon {
  height: 2.5rem;
  position: absolute;
  top: 0px;
  width: 2.5rem;
  z-index: 10;
}

.control.icons-left .input, .control.icons-left .select select {
  padding-left: 2.5rem;
}

.control.icons-left .icon.left {
  left: 0px;
}

.control.icons-right .input, .control.icons-right .select select {
  padding-left: 2.5rem;
}

.control.icons-right .icon.right {
  right: 0px;
}

.help {
  display: block;
  font-size: 0.75rem;
  line-height: 1rem;
  margin-top: 0.25rem;
}

.file {
  display: flex;
  align-items: stretch;
  justify-content: flex-start;
  position: relative;
}

.upload {
  display: inline-flex;
}

.upload input[type=file] {
  cursor: pointer;
  height: 100%;
  opacity: 0;
  outline: 2px solid transparent;
  outline-offset: 2px;
  position: absolute;
  top: 0px;
  left: 0px;
  width: 100%;
  z-index: -1;
}

.rounded-full {
  border-radius: 9999px;
}

.block {
  display: block;
}

.table {
  display: table;
}

.hidden {
  display: none;
}

.h-8 {
  height: 2rem;
}

.h-48 {
  height: 12rem;
}

.h-full {
  height: 100%;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

* {
  --tw-shadow: 0 0 #0000;
}

* {
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(59, 130, 246, 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
}

.text-gray-500 {
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

.text-red-500 {
  --tw-text-opacity: 1;
  color: rgba(239, 68, 68, var(--tw-text-opacity));
}

.text-green-500 {
  --tw-text-opacity: 1;
  color: rgba(16, 185, 129, var(--tw-text-opacity));
}

.text-blue-500 {
  --tw-text-opacity: 1;
  color: rgba(59, 130, 246, var(--tw-text-opacity));
}

.w-48 {
  width: 12rem;
}

.w-auto {
  width: auto;
}

@-webkit-keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@-webkit-keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}

@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}

@-webkit-keyframes pulse {
  50% {
    opacity: .5;
  }
}

@keyframes pulse {
  50% {
    opacity: .5;
  }
}

@-webkit-keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    -webkit-animation-timing-function: cubic-bezier(0.8,0,1,1);
            animation-timing-function: cubic-bezier(0.8,0,1,1);
  }

  50% {
    transform: none;
    -webkit-animation-timing-function: cubic-bezier(0,0,0.2,1);
            animation-timing-function: cubic-bezier(0,0,0.2,1);
  }
}

@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    -webkit-animation-timing-function: cubic-bezier(0.8,0,1,1);
            animation-timing-function: cubic-bezier(0.8,0,1,1);
  }

  50% {
    transform: none;
    -webkit-animation-timing-function: cubic-bezier(0,0,0.2,1);
            animation-timing-function: cubic-bezier(0,0,0.2,1);
  }
}

body {
  --tw-bg-opacity: 1;
  background-color: rgba(249, 250, 251, var(--tw-bg-opacity));
  font-size: 1rem;
  line-height: 1.5rem;
  padding-top: 3.5rem;
}

@media (min-width: 768px) {
  body {
    padding-left: 15rem;
  }
}

.aside {
  --tw-bg-opacity: 1;
  background-color: rgba(55, 65, 81, var(--tw-bg-opacity));
  height: 100vh;
  position: fixed;
  top: 0px;
  left: -15rem;
  width: 15rem;
  z-index: 40;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

@media (min-width: 768px) {
  .aside {
    left: 0px;
  }
}

.aside-tools {
  --tw-bg-opacity: 1;
  background-color: rgba(17, 24, 39, var(--tw-bg-opacity));
  display: flex;
  flex-direction: row;
  align-items: center;
  flex: 1 1 0%;
  height: 3.5rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
  width: 100%;
}

.has-aside-mobile-expanded .aside {
  left: 0px;
}

.has-aside-mobile-expanded .navbar {
  margin-left: 15rem;
}

.has-aside-mobile-expanded #app {
  margin-left: 15rem;
}

.menu-label {
  font-size: 0.75rem;
  line-height: 1rem;
  padding: 0.75rem;
  --tw-text-opacity: 1;
  color: rgba(156, 163, 175, var(--tw-text-opacity));
  text-transform: uppercase;
}

.menu-list li a {
  display: flex;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  --tw-text-opacity: 1;
  color: rgba(209, 213, 219, var(--tw-text-opacity));
}

.menu-list li > a:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(31, 41, 55, var(--tw-bg-opacity));
}

.menu-list li a .menu-item-label {
  flex-grow: 1;
}

.menu-list li a .icon {
  flex: none;
  width: 3rem;
}

.menu-list li.active > a {
  --tw-bg-opacity: 1;
  background-color: rgba(31, 41, 55, var(--tw-bg-opacity));
}

.menu-list li ul {
  display: none;
}

.menu-list li ul a {
  font-size: 0.875rem;
  line-height: 1.25rem;
  padding: 0.75rem;
}

.menu-list li.active ul {
  --tw-bg-opacity: 1;
  background-color: rgba(31, 41, 55, var(--tw-bg-opacity));
  display: block;
}

.is-title-bar {
  --tw-border-opacity: 1;
  border-color: rgba(243, 244, 246, var(--tw-border-opacity));
  border-bottom-width: 1px;
  padding: 1.5rem;
}

.is-title-bar li {
  display: inline-block;
  font-size: 1.5rem;
  line-height: 2rem;
  padding-right: 0.75rem;
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

.is-title-bar li:not(:last-child):after {
  content: '/';
  display: inline-block;
  padding-left: 0.75rem;
}

.is-title-bar li:last-child {
  font-weight: 900;
  padding-right: 0px;
  --tw-text-opacity: 1;
  color: rgba(0, 0, 0, var(--tw-text-opacity));
}

.button {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
  --tw-border-opacity: 1;
  border-color: rgba(249, 250, 251, var(--tw-border-opacity));
}

.button:hover {
  --tw-border-opacity: 1;
  border-color: rgba(107, 114, 128, var(--tw-border-opacity));
}

.button {
  border-radius: 0.25rem;
  border-width: 1px;
  cursor: pointer;
  display: inline-flex;
  justify-content: center;
}

.button:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.button {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  text-align: center;
  --tw-text-opacity: 1;
  color: rgba(0, 0, 0, var(--tw-text-opacity));
  white-space: nowrap;
}

.button.small {
  font-size: 0.75rem;
  line-height: 1rem;
  padding: 0.25rem;
}

.button.small.textual {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.button.active {
  --tw-border-opacity: 1;
  border-color: rgba(209, 213, 219, var(--tw-border-opacity));
}

.button.active:hover {
  --tw-border-opacity: 1;
  border-color: rgba(107, 114, 128, var(--tw-border-opacity));
}

.button.green {
  --tw-bg-opacity: 1;
  background-color: rgba(16, 185, 129, var(--tw-bg-opacity));
}

.button.green:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(5, 150, 105, var(--tw-bg-opacity));
}

.button.green {
  --tw-border-opacity: 1;
  border-color: rgba(16, 185, 129, var(--tw-border-opacity));
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.button.red {
  --tw-bg-opacity: 1;
  background-color: rgba(239, 68, 68, var(--tw-bg-opacity));
}

.button.red:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(220, 38, 38, var(--tw-bg-opacity));
}

.button.red {
  --tw-border-opacity: 1;
  border-color: rgba(239, 68, 68, var(--tw-border-opacity));
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.button.blue {
  --tw-bg-opacity: 1;
  background-color: rgba(59, 130, 246, var(--tw-bg-opacity));
}

.button.blue:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(37, 99, 235, var(--tw-bg-opacity));
}

.button.blue {
  --tw-border-opacity: 1;
  border-color: rgba(59, 130, 246, var(--tw-border-opacity));
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.button.light {
  --tw-bg-opacity: 1;
  background-color: rgba(243, 244, 246, var(--tw-bg-opacity));
}

.button.light:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(229, 231, 235, var(--tw-bg-opacity));
}

.button.light {
  --tw-border-opacity: 1;
  border-color: rgba(243, 244, 246, var(--tw-border-opacity));
}

.buttons {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: flex-start;
}

.buttons.right {
  justify-content: flex-end;
}

.buttons .button {
  margin-left: 0.25rem;
  margin-right: 0.25rem;
}

.is-hero-bar {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
  --tw-border-opacity: 1;
  border-color: rgba(243, 244, 246, var(--tw-border-opacity));
  border-bottom-width: 1px;
  padding: 1.5rem;
}

.is-hero-bar h1 {
  font-weight: 600;
  font-size: 1.875rem;
  line-height: 2.25rem;
  line-height: 1.25;
}

.card {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
  --tw-border-opacity: 1;
  border-color: rgba(243, 244, 246, var(--tw-border-opacity));
  border-radius: 0.25rem;
  border-width: 1px;
}

.card:not(:last-child) {
  margin-bottom: 1.5rem;
}

.card.has-table .card-content {
  padding: 0px;
}

.card-content {
  padding: 1.5rem;
}

.card-content hr {
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
  margin-left: -1.5rem;
  margin-right: -1.5rem;
}

.card.empty .card-content {
  padding-top: 3rem;
  padding-bottom: 3rem;
  text-align: center;
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

.card-header {
  --tw-border-opacity: 1;
  border-color: rgba(243, 244, 246, var(--tw-border-opacity));
  border-bottom-width: 1px;
  display: flex;
  align-items: stretch;
}

.card-header-title, .card-header-icon {
  display: flex;
  align-items: center;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  padding-left: 1rem;
  padding-right: 1rem;
}

.card-header-title {
  flex-grow: 1;
  font-weight: 700;
}

.card-header-icon {
  justify-content: center;
}

.widget-label h3 {
  font-size: 1.125rem;
  line-height: 1.75rem;
  line-height: 1.25;
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

.widget-label h1 {
  font-weight: 600;
  font-size: 1.875rem;
  line-height: 2.25rem;
  line-height: 1.25;
}

.icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: 1.5rem;
  width: 1.5rem;
}

.icon.widget-icon {
  height: 5rem;
  width: 5rem;
}

.icon.large {
  height: 3rem;
  width: 3rem;
}

.icon i {
  display: inline-flex;
}

.tile {
  align-items: stretch;
  flex-grow: 1;
  flex-shrink: 1;
}

.tile.is-parent {
  padding: 0.75rem;
}

@media (min-width: 768px) {
  .tile.is-parent {
    display: flex;
  }
}

.tile.is-ancestor {
  margin-left: -0.75rem;
  margin-right: -0.75rem;
  margin-top: -0.75rem;
}

@media (min-width: 768px) {
  .tile.is-ancestor {
    display: flex;
  }
}

.tile.is-ancestor:not(:last-child) {
  margin-bottom: 0.75rem;
}

.is-main-section {
  padding: 1.5rem;
}

table {
  width: 100%;
}

thead {
  display: none;
}

@media (min-width: 768px) {
  thead {
    display: table-header-group;
  }
}

tr {
  --tw-border-opacity: 1;
  border-color: rgba(243, 244, 246, var(--tw-border-opacity));
  border-bottom-width: 4px;
  display: block;
  max-width: 100%;
  position: relative;
}

@media (min-width: 768px) {
  tr {
    border-bottom-width: 0px;
    display: table-row;
  }
}

tr:last-child {
  border-bottom-width: 0px;
}

@media (min-width: 768px) {
  th {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    padding-left: 0.75rem;
    padding-right: 0.75rem;
    text-align: left;
  }
}

td {
  --tw-border-opacity: 1;
  border-color: rgba(243, 244, 246, var(--tw-border-opacity));
  border-bottom-width: 1px;
  display: flex;
  justify-content: space-between;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  padding-left: 1rem;
  padding-right: 1rem;
  text-align: right;
  vertical-align: top;
}

@media (min-width: 768px) {
  td {
    border-bottom-width: 0px;
    display: table-cell;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    padding-left: 0.75rem;
    padding-right: 0.75rem;
    text-align: left;
    vertical-align: middle;
  }
}

@media (min-width: 768px) {
  tr:nth-child(odd) td {
    --tw-bg-opacity: 1;
    background-color: rgba(249, 250, 251, var(--tw-bg-opacity));
  }
}

td:last-child {
  border-bottom-width: 0px;
}

@media (min-width: 768px) {
  tbody tr:hover td {
    --tw-bg-opacity: 1;
    background-color: rgba(243, 244, 246, var(--tw-bg-opacity));
  }
}

td:before {
  content: attr(data-label);
  font-weight: 600;
  padding-right: 0.75rem;
  text-align: left;
}

@media (min-width: 768px) {
  td:before {
    display: none;
  }
}

@media (min-width: 768px) {
  td.checkbox-cell, th.checkbox-cell {
    width: 1.25rem;
  }
}

td.progress-cell progress {
  display: flex;
  align-self: center;
  width: 40%;
}

@media (min-width: 768px) {
  td.progress-cell progress {
    width: 100%;
  }
}

td.image-cell {
  border-bottom-width: 0px;
}

@media (min-width: 768px) {
  td.image-cell {
    width: 1.5rem;
  }
}

td.image-cell:before, td.actions-cell:before {
  display: none;
}

td.image-cell .image {
  height: 6rem;
  margin-left: auto;
  margin-right: auto;
  width: 6rem;
}

@media (min-width: 768px) {
  td.image-cell .image {
    height: 1.5rem;
    width: 1.5rem;
  }
}

.table-pagination {
  --tw-border-opacity: 1;
  border-color: rgba(243, 244, 246, var(--tw-border-opacity));
  border-top-width: 1px;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

progress {
  border-radius: 9999px;
  height: 0.75rem;
  overflow: hidden;
}

progress::-webkit-progress-bar {
  --tw-bg-opacity: 1;
  background-color: rgba(229, 231, 235, var(--tw-bg-opacity));
}

progress::-webkit-progress-value {
  --tw-bg-opacity: 1;
  background-color: rgba(16, 185, 129, var(--tw-bg-opacity));
}

progress::-moz-progress-bar {
  --tw-bg-opacity: 1;
  background-color: rgba(16, 185, 129, var(--tw-bg-opacity));
}

progress::-ms-fill {
  --tw-bg-opacity: 1;
  background-color: rgba(16, 185, 129, var(--tw-bg-opacity));
  border-width: 0px;
}

.level {
  align-items: center;
  justify-content: space-between;
}

@media (min-width: 768px) {
  .level {
    display: flex;
  }
}

.level-left {
  justify-content: flex-start;
}

@media (min-width: 768px) {
  .level-left {
    display: flex;
  }
}

.level-right {
  justify-content: flex-end;
}

@media (min-width: 768px) {
  .level-right {
    display: flex;
  }
}

.level-left, .level-right {
  align-items: center;
  flex-grow: 0;
  flex-shrink: 0;
}

.level-left+.level-right {
  margin-top: 1.5rem;
}

@media (min-width: 768px) {
  .level-left+.level-right {
    margin-top: 0px;
  }
}

.level-item {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-grow: 0;
  flex-shrink: 0;
}

@media (min-width: 768px) {
  .level-left .level-item:not(:last-child), .level-right .level-item:not(:last-child) {
    margin-right: 0.75rem;
  }
}

.level.mobile {
  display: flex;
}

.level.mobile .level-item {
  flex-grow: 1;
}

.level.mobile.card-widget .level-item:first-child {
  justify-content: flex-start;
}

.level.mobile.card-widget .level-item:last-child {
  justify-content: flex-end;
  flex-grow: 0;
}

.level.mobile .level-item:not(:last-child) {
  margin-right: 0.75rem;
}

.image {
  display: block;
  position: relative;
}

.image img {
  display: block;
  height: auto;
  max-width: 100%;
  width: 100%;
}

#app {
  width: 100vw;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

@media (min-width: 768px) {
  #app {
    width: auto;
  }
}

.has-dropdown {
  cursor: pointer;
}

.modal {
  display: none;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  position: fixed;
  z-index: 40;
}

.modal.active {
  display: flex;
}

.modal-background {
  --tw-bg-opacity: 1;
  background-color: rgba(17, 24, 39, var(--tw-bg-opacity));
  --tw-bg-opacity: 0.8;
}

.modal-card {
  max-height: calc(100vh - 160px);
  display: flex;
  flex-direction: column;
  overflow: hidden;
  position: relative;
  width: 100%;
}

@media (min-width: 768px) {
  .modal-card {
    margin-left: auto;
    margin-right: auto;
    width: 40%;
  }
}

.modal-card-body {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
  flex-grow: 1;
  flex-shrink: 1;
  overflow: auto;
  padding: 1.5rem;
}

.modal-card-head, .modal-card-foot {
  --tw-bg-opacity: 1;
  background-color: rgba(249, 250, 251, var(--tw-bg-opacity));
  --tw-border-opacity: 1;
  border-color: rgba(243, 244, 246, var(--tw-border-opacity));
  display: flex;
  align-items: center;
  justify-content: flex-start;
  flex-shrink: 0;
  padding: 1.5rem;
  position: relative;
}

.modal-card-head {
  border-top-left-radius: 0.25rem;
  border-top-right-radius: 0.25rem;
  border-bottom-width: 1px;
}

.modal-card-foot {
  border-bottom-right-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
  border-top-width: 1px;
}

.notification {
  border-radius: 0.25rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.notification:not(:last-child) {
  margin-bottom: 1.5rem;
}

.notification.blue {
  --tw-bg-opacity: 1;
  background-color: rgba(59, 130, 246, var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.notification.green {
  --tw-bg-opacity: 1;
  background-color: rgba(16, 185, 129, var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.notification.red {
  --tw-bg-opacity: 1;
  background-color: rgba(239, 68, 68, var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.checkbox, .radio, .switch {
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  position: relative;
}

.checkbox input[type=checkbox], .radio input[type=radio], .switch input[type=checkbox] {
  opacity: 0;
  position: absolute;
  left: 0px;
  z-index: -1;
}

.checkbox input[type=checkbox]+.check, .radio input[type=radio]+.check, .switch input[type=checkbox]+.check {
  --tw-border-opacity: 1;
  border-color: rgba(156, 163, 175, var(--tw-border-opacity));
}

.checkbox input[type=checkbox]+.check:hover, .radio input[type=radio]+.check:hover, .switch input[type=checkbox]+.check:hover {
  --tw-border-opacity: 1;
  border-color: rgba(107, 114, 128, var(--tw-border-opacity));
}

.checkbox input[type=checkbox]+.check, .radio input[type=radio]+.check, .switch input[type=checkbox]+.check {
  border-width: 1px;
}

.checkbox input[type=checkbox]+.check, .radio input[type=radio]+.check {
  display: block;
  height: 1.25rem;
  width: 1.25rem;
}

.checkbox input[type=checkbox]+.check {
  border-radius: 0.25rem;
}

.switch input[type=checkbox]+.check {
  --tw-bg-opacity: 1;
  background-color: rgba(229, 231, 235, var(--tw-bg-opacity));
  display: flex;
  align-items: center;
  flex-shrink: 0;
  height: 1.5rem;
  padding: 0.125rem;
  width: 3rem;
}

.radio input[type=radio]+.check, .switch input[type=checkbox]+.check, .switch input[type=checkbox]+.check:before {
  border-radius: 9999px;
}

.checkbox input[type=checkbox]:checked+.check, .radio input[type=radio]:checked+.check {
  --tw-bg-opacity: 1;
  background-color: rgba(59, 130, 246, var(--tw-bg-opacity));
  background-position: center;
  background-repeat: no-repeat;
  --tw-border-opacity: 1;
  border-color: rgba(59, 130, 246, var(--tw-border-opacity));
  border-width: 4px;
}

.checkbox input[type=checkbox]:checked+.check {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1 1'%3E%3Cpath style='fill:%23fff' d='M 0.04038059,0.6267767 0.14644661,0.52071068 0.42928932,0.80355339 0.3232233,0.90961941 z M 0.21715729,0.80355339 0.85355339,0.16715729 0.95961941,0.2732233 0.3232233,0.90961941 z'%3E%3C/path%3E%3C/svg%3E");
}

.radio input[type=radio]:checked+.check {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23fff' d='M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z' /%3E%3C/svg%3E");
}

.switch input[type=checkbox]:checked+.check {
  --tw-bg-opacity: 1;
  background-color: rgba(59, 130, 246, var(--tw-bg-opacity));
  --tw-border-opacity: 1;
  border-color: rgba(59, 130, 246, var(--tw-border-opacity));
}

.switch input[type=checkbox]+.check:before {
  content: '';
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
  --tw-border-opacity: 1;
  border-color: rgba(156, 163, 175, var(--tw-border-opacity));
  border-width: 1px;
  display: block;
  height: 1.25rem;
  width: 1.25rem;
}

.switch input[type=checkbox]:checked+.check:before {
  transform: translate3d(110%, 0 ,0);
  --tw-border-opacity: 1;
  border-color: rgba(59, 130, 246, var(--tw-border-opacity));
}

.checkbox .control-label, .radio .control-label, .switch .control-label {
  padding-left: 0.5rem;
}

footer {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

@media (min-width: 640px) {
}

@media (min-width: 768px) {
}

@media (min-width: 1024px) {
}

@media (min-width: 1280px) {
}

@media (min-width: 1536px) {
}


